"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Enums_1 = require("./Enums");
// Class to maintain player state during a game
class Player {
    constructor(location, state, facing) {
        this.location = location;
        this.state = state;
        this.facing = facing;
    }
    get Location() {
        return this.location;
    }
    set Location(mazeLoc) {
        this.location = mazeLoc;
    }
    get State() {
        return this.state;
    }
    clearStates() {
        this.state = Enums_1.PLAYER_STATES.STANDING;
    }
    // Gets and retrieves the cardinal direction the player character is facing
    set Facing(dir) {
        this.facing = dir;
    }
    get Facing() {
        return this.facing;
    }
    /**
     * Adds a PLAYER_STATES value, taking care to ensure that mutually-exclusive
     * states are toggled appropriately.  e.g. Player cannot be both sitting and standing.
     *
     * @param state
     */
    addState(state) {
        if (!(this.state & state)) {
            this.state += state;
            if (state === Enums_1.PLAYER_STATES.SITTING) {
                this.removeState(Enums_1.PLAYER_STATES.STANDING);
                this.removeState(Enums_1.PLAYER_STATES.LYING);
            }
            if (state === Enums_1.PLAYER_STATES.LYING) {
                this.removeState(Enums_1.PLAYER_STATES.STANDING);
                this.removeState(Enums_1.PLAYER_STATES.SITTING);
            }
            if (state === Enums_1.PLAYER_STATES.STANDING) {
                this.removeState(Enums_1.PLAYER_STATES.SITTING);
                this.removeState(Enums_1.PLAYER_STATES.LYING);
            }
        }
    }
    /**
     * Removes a PLAYER_STATES bitwise value.  If PLAYER_STATES == NONE, player will reverted to the "STANDING"
     * state by default
     *
     * @param state
     */
    removeState(state) {
        if (!!(this.state & state)) {
            this.state -= state;
        }
        // there really isn't a "none" state - if nothing else, the player will be STANDING
        if (this.state === Enums_1.PLAYER_STATES.NONE) {
            this.state = Enums_1.PLAYER_STATES.STANDING;
        }
    }
}
exports.Player = Player;
//# sourceMappingURL=Player.js.map