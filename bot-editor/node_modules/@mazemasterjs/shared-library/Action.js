"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Enums_1 = require("./Enums");
const Engram_1 = require("./Engram");
const ObjectBase_1 = require("./ObjectBase");
class Action extends ObjectBase_1.ObjectBase {
    /**
     * Static function to contstruct action directly from JSON
     *
     * @param jsonData
     */
    static fromJson(jsonData) {
        const action = new Action(0, 0, '');
        action.command = action.validateEnumField('command', 'COMMANDS', Enums_1.COMMANDS, jsonData.command);
        action.direction = action.validateEnumField('direction', 'DIRS', Enums_1.DIRS, jsonData.direction);
        action.engram = action.validateDataField('engram', jsonData.engram, 'object');
        action.outcomes = action.validateDataField('outcomes', jsonData.outcomes, 'array');
        action.score = action.validateDataField('score', jsonData.score, 'number');
        action.moveCount = action.validateDataField('moveCount', jsonData.score, 'number');
        action.botCohesion = action.validateDataField('botCohesion', jsonData.botCohesion, 'array');
        return action;
    }
    constructor(command, direction, message) {
        super();
        this.command = command;
        this.direction = direction;
        this.message = message;
        this.engram = new Engram_1.Engram();
        this.outcomes = new Array();
        this.score = 0;
        this.moveCount = 0;
        this.trophies = new Array();
        this.botCohesion = new Array();
    }
    /**
     * Returns a simple JSON stub of Action data
     */
    getStub() {
        const stub = {
            command: this.command,
            direction: this.direction,
            message: this.message,
            engram: this.engram,
            outcomes: this.outcomes,
            score: this.score,
            moveCount: this.moveCount,
            trophies: this.trophies,
            botCohesion: this.botCohesion,
        };
        return stub;
    }
}
exports.Action = Action;
//# sourceMappingURL=Action.js.map